{"ast":null,"code":"var _jsxFileName = \"/Users/zakariaalmardaee/csfolder/vintage-game-emulator/frontend/src/components/Emulator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport EmulatorComponent from './EmulatorComponent';\nimport { saveGame, loadGame } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Emulator = () => {\n  _s();\n  const [romData, setRomData] = useState(null);\n  const emulatorRef = useRef(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      setRomData(reader.result);\n    };\n    reader.readAsBinaryString(file);\n  };\n  const handleSaveGame = async () => {\n    try {\n      const gameState = emulatorRef.current.getGameState();\n      await saveGame(gameState);\n      console.log('Game saved');\n    } catch (error) {\n      console.error('Save game failed', error);\n    }\n  };\n  const handleLoadGame = async () => {\n    try {\n      const response = await loadGame();\n      setRomData(response.data.game_state);\n      console.log('Game loaded');\n    } catch (error) {\n      console.error('Load game failed', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"Emulator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".nes\",\n      onChange: handleFileChange,\n      className: \"mb-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), romData && /*#__PURE__*/_jsxDEV(EmulatorComponent, {\n      ref: emulatorRef,\n      romData: romData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveGame,\n        className: \"bg-navy hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n        children: \"Save Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoadGame,\n        className: \"ml-2 bg-navy hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n        children: \"Load Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Emulator, \"4wIQXxbHBSy1eSRsWG/YCt1yOmw=\");\n_c = Emulator;\nexport default Emulator;\nvar _c;\n$RefreshReg$(_c, \"Emulator\");","map":{"version":3,"names":["React","useState","useRef","EmulatorComponent","saveGame","loadGame","jsxDEV","_jsxDEV","Emulator","_s","romData","setRomData","emulatorRef","handleFileChange","event","file","target","files","reader","FileReader","onload","result","readAsBinaryString","handleSaveGame","gameState","current","getGameState","console","log","error","handleLoadGame","response","data","game_state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/zakariaalmardaee/csfolder/vintage-game-emulator/frontend/src/components/Emulator.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport EmulatorComponent from './EmulatorComponent';\nimport { saveGame, loadGame } from '../services/api';\n\nconst Emulator = () => {\n  const [romData, setRomData] = useState(null);\n  const emulatorRef = useRef(null);\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      setRomData(reader.result);\n    };\n    reader.readAsBinaryString(file);\n  };\n\n  const handleSaveGame = async () => {\n    try {\n      const gameState = emulatorRef.current.getGameState();\n      await saveGame(gameState);\n      console.log('Game saved');\n    } catch (error) {\n      console.error('Save game failed', error);\n    }\n  };\n\n  const handleLoadGame = async () => {\n    try {\n      const response = await loadGame();\n      setRomData(response.data.game_state);\n      console.log('Game loaded');\n    } catch (error) {\n      console.error('Load game failed', error);\n    }\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto mt-8\">\n      <h1 className=\"text-3xl font-bold mb-4\">Emulator</h1>\n      <input type=\"file\" accept=\".nes\" onChange={handleFileChange} className=\"mb-4\" />\n      {romData && <EmulatorComponent ref={emulatorRef} romData={romData} />}\n      <div className=\"mt-4\">\n        <button\n          onClick={handleSaveGame}\n          className=\"bg-navy hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n        >\n          Save Game\n        </button>\n        <button\n          onClick={handleLoadGame}\n          className=\"ml-2 bg-navy hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n        >\n          Load Game\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Emulator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMW,WAAW,GAAGV,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAMW,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;MACpBT,UAAU,CAACO,MAAM,CAACG,MAAM,CAAC;IAC3B,CAAC;IACDH,MAAM,CAACI,kBAAkB,CAACP,IAAI,CAAC;EACjC,CAAC;EAED,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,SAAS,GAAGZ,WAAW,CAACa,OAAO,CAACC,YAAY,CAAC,CAAC;MACpD,MAAMtB,QAAQ,CAACoB,SAAS,CAAC;MACzBG,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C;EACF,CAAC;EAED,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM1B,QAAQ,CAAC,CAAC;MACjCM,UAAU,CAACoB,QAAQ,CAACC,IAAI,CAACC,UAAU,CAAC;MACpCN,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C;EACF,CAAC;EAED,oBACEtB,OAAA;IAAK2B,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrC5B,OAAA;MAAI2B,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrDhC,OAAA;MAAOiC,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAE7B,gBAAiB;MAACqB,SAAS,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC/E7B,OAAO,iBAAIH,OAAA,CAACJ,iBAAiB;MAACwC,GAAG,EAAE/B,WAAY;MAACF,OAAO,EAAEA;IAAQ;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrEhC,OAAA;MAAK2B,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnB5B,OAAA;QACEqC,OAAO,EAAErB,cAAe;QACxBW,SAAS,EAAC,0GAA0G;QAAAC,QAAA,EACrH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACThC,OAAA;QACEqC,OAAO,EAAEd,cAAe;QACxBI,SAAS,EAAC,+GAA+G;QAAAC,QAAA,EAC1H;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAtDID,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAwDd,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}